{"version":3,"sources":["webpack://mesto/./src/scripts/components/card.js","webpack://mesto/./src/scripts/components/section.js","webpack://mesto/./src/scripts/utils/constants.js","webpack://mesto/./src/scripts/components/popup.js","webpack://mesto/./src/scripts/components/popup-with-form.js","webpack://mesto/./src/scripts/components/popup-with-image.js","webpack://mesto/./src/scripts/components/form-validator.js","webpack://mesto/./src/scripts/components/user-info.js","webpack://mesto/./src/scripts/utils/validation-config.js","webpack://mesto/./src/scripts/components/api.js","webpack://mesto/./src/scripts/components/popup-with-confirmation.js","webpack://mesto/./src/scripts/utils/utils.js","webpack://mesto/./src/pages/index.js"],"names":["Card","itemTemplate","cardData","user","handleCardClick","handleDeleteButtonClick","handleLikeAdd","handleLikeDelete","this","_itemTemplate","_cardData","name","link","likes","_id","_currentUser","_cardElement","_createCardElement","_addEventListeners","_handleCardClick","_handleDeleteButtonClick","_handleLikeAdd","_handleLikeDelete","_owner","owner","cardElement","content","children","cloneNode","image","querySelector","title","deleteButton","_likeElement","src","alt","textContent","length","some","like","classList","add","remove","addEventListener","evt","toggle","Section","renderer","containerSelector","_renderer","_container","document","data","forEach","item","append","element","prepend","profileEditButton","newCardAddButton","popupEditNameInput","popupEditJobInput","profileName","profileAbout","avatarElement","avatarEditElement","popupEdit","popupAvatarElement","popupConfirm","popupNewPlace","popupImageSelector","popupProfileEditForm","avatarEditForm","popupNewPlaceForm","profileBtnValue","profileBtnNewValue","newPlaceBtnValue","newPlaceBtnNewValue","Popup","popupSelector","_popup","setEventListeners","_handleEscClose","bind","e","key","close","event","target","currentTarget","removeEventListener","PopupWithForm","formSubmitHandler","_formSubmitHandler","_inputs","Array","from","_form","querySelectorAll","values","input","value","preventDefault","_getInputValues","reset","PopupWithImage","_picturePopupImage","_textPopupImage","FormValidator","validationConfig","formElement","_formElement","_toggleButtonState","_inputList","inputElement","_hideInputError","_validationConfig","inputSelector","_buttonElement","submitButtonSelector","errorMessage","errorElement","id","inputErrorClass","errorClass","validity","valid","_showInputError","validationMessage","_hasInvalidInput","inactiveButtonClass","disabled","_checkInputValidity","_setEventListeners","UserInfo","profileTitleSelector","profileSubtitleSelector","profileAvatarSelector","_profileTitle","_profileSubtitle","_profileAvatar","_userID","_name","job","_job","avatar","_avatar","about","formSelector","Api","options","_address","baseUrl","_token","headers","authorization","res","ok","json","Promise","reject","status","endpoint","method","body","fetchInit","fetch","JSON","stringify","then","_handleResponse","_createRequest","userInfo","PopupWithConfirmation","confirmSubmitHandler","_confirmSubmitHandler","_data","_evt","renderLoading","isLoading","newValue","api","newCard","confirmPopup","parentNode","deleteCard","catch","err","console","log","profileEditForm","updateUserInfo","dataUpdated","recordUserInfo","finally","newPlaceForm","postCard","addItem","editAvatarForm","editAvatar","popupImage","popupPlaceFormValidation","enableValidation","popupEditFormValidation","popupAvatarFormValidation","result","setUserInfo","cardImageClickHandler","handleDeleteClick","render","nextElementSibling","deleteLike","open","all","getUserInfo","getInitialCards","cards","renderItems","resetForm"],"mappings":"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","file":"main.js","sourcesContent":["export class Card {\n\n  constructor(itemTemplate, cardData, user, handleCardClick, handleDeleteButtonClick, handleLikeAdd, handleLikeDelete) {\n    this._itemTemplate = itemTemplate;\n    this._cardData = cardData;\n    this._cardData.name = cardData.name;\n    this._cardData.link = cardData.link;\n    this._cardData.likes = cardData.likes;\n    this._cardData._id = cardData._id;\n    this._currentUser = user;\n    this._cardElement = this._createCardElement();\n    this._addEventListeners();\n    this._handleCardClick = handleCardClick;\n    this._handleDeleteButtonClick = handleDeleteButtonClick;\n    this._handleLikeAdd = handleLikeAdd;\n    this._handleLikeDelete = handleLikeDelete;\n  }\n\n  getId() {\n    return this._cardData._id\n  }\n\n  _createCardElement() {\n    this._owner = this._cardData.owner._id;\n    const cardElement = this._itemTemplate.content.children[0].cloneNode(true);\n    const image = cardElement.querySelector('.photo-grid__image');\n    const title = cardElement.querySelector('.photo-grid__title');\n    const likes = cardElement.querySelector('.photo-grid__like-count');\n    const deleteButton = cardElement.querySelector('.photo-grid__delete')\n    this._likeElement = cardElement.querySelector('.photo-grid__like');\n\n    image.src = this._cardData.link;\n    image.alt = this._cardData.name;\n    title.textContent = this._cardData.name;\n    likes.textContent = this._cardData.likes.length;\n\n    if(this._cardData.likes.some(like => like._id === this._currentUser._id)) {\n      this._likeElement.classList.add('photo-grid__like-active')\n    }\n\n    if (this._owner === this._currentUser._id) {\n      deleteButton.classList.remove('photo-grid__delete_hidden')\n    }\n    \n    return cardElement;\n  }\n\n  _addEventListeners() {\n    this._likeElement.addEventListener('click', (evt) => {\n      if(this._cardData.likes.some(like => like._id === this._currentUser._id)){\n        this._handleLikeDelete(evt, this._cardData)\n      } else {\n        this._handleLikeAdd(evt, this._cardData)\n      }\n  });\n    \n    const deleteButton = this._cardElement.querySelector('.photo-grid__delete');\n    deleteButton.addEventListener('click', (evt) => {this._handleDeleteButtonClick(evt, this._cardData._id)});\n\n    this._cardElement.querySelector('.photo-grid__image').addEventListener('click', () => this._handleCardClick(this._cardData.link, this._cardData.name))\n  }\n\n  like() {\n    this._likeElement.classList.toggle('photo-grid__like-active')\n  }\n\n  remove() {\n    this._cardElement.remove()\n  }\n\n  render() {\n\n    return this._cardElement;\n  }\n}","export class Section {\n  constructor(renderer, containerSelector) {\n    this._renderer = renderer;\n    this._container = document.querySelector(containerSelector);\n  }\n\n  renderItems(data) {\n    data.forEach(item => {\n      this._container.append(this._renderer(item));\n  })\n}\n\n  addItem(element) {\n    this._container.prepend(element)\n  }\n}","const photoGrid = '.photo-grid';\nconst profileEditButton = document.querySelector('.profile__edit-button');\nconst newCardAddButton = document.querySelector('.profile__add');\nconst popupEditNameInput = document.querySelector('.popup__input_value_name')\nconst popupEditJobInput = document.querySelector('.popup__input_value_title')\nconst profileName = document.querySelector('.profile__title')\nconst profileAbout = document.querySelector('.profile__subtitle')\nconst avatarElement = document.querySelector('.profile__avatar')\nconst avatarEditElement = document.querySelector('.profile__avatar-container')\nconst popupEdit = document.querySelector('.popup_type_edit')\nconst popupAvatarElement = document.querySelector('.popup_type_edit-avatar')\nconst popupConfirm = document.querySelector('.popup_type_confirm')\nconst popupNewPlace = document.querySelector(\".popup_type_new-place\")\nconst popupImageSelector = document.querySelector('.popup_type_image')\nconst popupProfileEditForm = document.querySelector('.popup__form_edit')\nconst avatarEditForm = document.querySelector('.popup__form_edit-avatar')\nconst popupNewPlaceForm = document.querySelector('.popup__form_new-place')\nconst profileBtnValue = \"Сохранить\"\nconst profileBtnNewValue = \"Сохранение...\"\nconst newPlaceBtnValue = \"Создать\"\nconst newPlaceBtnNewValue = \"Создание...\" \nconst itemTemplate = document.querySelector(\".item_template\")\n\nexport { \n    avatarEditElement, \n    photoGrid, \n    profileEditButton, \n    newCardAddButton, \n    popupEditNameInput, \n    popupEditJobInput, \n    profileName, \n    profileAbout, \n    avatarElement,\n    popupEdit,\n    popupAvatarElement,\n    popupConfirm,\n    popupNewPlace,\n    popupImageSelector,\n    popupProfileEditForm,\n    avatarEditForm,\n    popupNewPlaceForm,\n    profileBtnValue,\n    profileBtnNewValue,\n    newPlaceBtnValue,\n    newPlaceBtnNewValue,\n    itemTemplate}","export default class Popup {\n  constructor(popupSelector) {\n    this._popup = popupSelector;\n    this.setEventListeners();\n    this._handleEscClose = this._handleEscClose.bind(this);\n  }\n\n  _handleEscClose(e) {\n    if (e.key === \"Escape\") {\n      this.close();\n    }\n  }\n\n  //слушатель событий\n  setEventListeners() {\n    this._popup.querySelector('.popup__close').addEventListener('click', () => this.close());\n\n    this._popup.addEventListener('click', (event) => {\n      if (event.target === event.currentTarget) {\n          this.close()\n      }\n    })\n  }\n  \n  //открытие попапов\n  open() {\n    this._popup.classList.add('popup_active');\n    document.addEventListener('keyup', this._handleEscClose);\n  }\n\n  //закрытие попапов\n  close() {\n    this._popup.classList.remove('popup_active');\n    document.removeEventListener('keyup', this._handleEscClose);\n  }\n}","import Popup from './popup.js';\n\nexport default class PopupWithForm extends Popup {\n    constructor(popupSelector, formSubmitHandler) {\n      super(popupSelector);\n      this._formSubmitHandler = formSubmitHandler;\n      this._inputs = Array.from(this._form.querySelectorAll('.popup__input'))\n    }\n \n    _getInputValues() {\n      const values = {}\n      \n      this._inputs.forEach(input => {\n        values[input.name] = input.value;\n      })\n      return values;\n    }\n\n    setEventListeners() {\n      super.setEventListeners();\n\n      this._form = this._popup.querySelector('.popup__form');\n\n      this._form.addEventListener('submit', (e) => {\n        e.preventDefault();\n\n        this._formSubmitHandler(this._getInputValues());\n      });\n    }\n\n    close() {\n      this._form.reset()\n      super.close()\n    }\n  }","import Popup from './popup.js';\n\nexport default class PopupWithImage extends Popup {\n    constructor(popupSelector) {\n      super(popupSelector)\n      this._picturePopupImage = this._popup.querySelector('.popup__image');\n      this._textPopupImage = this._popup.querySelector('.popup__image-title');\n    }\n\n    open(link, name) {\n      this._picturePopupImage.src = link;\n      this._picturePopupImage.alt = name;\n      this._textPopupImage.textContent = name;   \n      super.open();\n    }\n  }","class FormValidator { \n  constructor(validationConfig, formElement) { \n    this._validationConfig = validationConfig; \n    this._formElement = formElement; \n    this._inputList = Array.from(this._formElement.querySelectorAll(this._validationConfig.inputSelector)); \n    this._buttonElement = this._formElement.querySelector(this._validationConfig.submitButtonSelector);\n  } \n   \n  _showInputError(inputElement, errorMessage) { \n    const errorElement = this._formElement.querySelector(`#${inputElement.id}-error`); \n     \n    inputElement.classList.add(this._validationConfig.inputErrorClass); \n    errorElement.textContent = errorMessage; \n    errorElement.classList.add(this._validationConfig.errorClass); \n  } \n \n  _hideInputError(inputElement) { \n    const errorElement = this._formElement.querySelector(`#${inputElement.id}-error`); \n    inputElement.classList.remove(this._validationConfig.inputErrorClass); \n    errorElement.classList.remove(this._validationConfig.errorClass); \n    errorElement.textContent = ''; \n  } \n \n  _checkInputValidity(inputElement) { \n    if (!inputElement.validity.valid) { \n      this._showInputError(inputElement, inputElement.validationMessage); \n    } else { \n      this._hideInputError(inputElement); \n    } \n  } \n \n  _hasInvalidInput() { \n    return this._inputList.some((inputElement) => { \n      return !inputElement.validity.valid; \n     }) \n  } \n \n  _toggleButtonState () { \n    if (this._hasInvalidInput()) { \n      this._buttonElement.classList.add(this._validationConfig.inactiveButtonClass) \n      this._buttonElement.disabled = true; \n    } else { \n      this._buttonElement.classList.remove(this._validationConfig.inactiveButtonClass) \n      this._buttonElement.disabled = false; \n    } \n  } \n \n  _setEventListeners() { \n    this._toggleButtonState(); \n \n    this._inputList.forEach((inputElement) => { \n      inputElement.addEventListener('input', () => { \n        this._checkInputValidity(inputElement); \n         \n        this._toggleButtonState(); \n      }); \n    }) \n  } \n \n  enableValidation() { \n    this._formElement.addEventListener('submit', (evt) => { \n      evt.preventDefault(); \n    }); \n     \n    this._setEventListeners(this._formElement); \n  } \n \n  resetForm = () => { \n    this._formElement.reset() \n    this._toggleButtonState() \n \n    this._inputList.forEach((inputElement) => { \n      this._hideInputError(inputElement) \n      }); \n  }   \n} \n \nexport { FormValidator }","export default class UserInfo {\n    constructor(profileTitleSelector, profileSubtitleSelector, profileAvatarSelector) {\n        this._profileTitle = profileTitleSelector;\n        this._profileSubtitle = profileSubtitleSelector;\n        this._profileAvatar = profileAvatarSelector;\n    }\n\n    getUserId() {\n        return this._userID\n    }\n    \n    getUserInfo() {\n        const values = {\n            name: this._name = this._profileTitle.textContent,\n            job: this._job = this._profileSubtitle.textContent,\n            avatar: this._avatar = this._profileAvatar.src\n        }\n        \n        return values\n    }\n    \n    setUserInfo(data) {\n        if(data.name) {\n            this._profileTitle.textContent = data.name\n        }\n        if(data.about) {\n            this._profileSubtitle.textContent = data.about\n        }\n        if(data.avatar) {\n            this._profileAvatar.src = data.avatar\n        }\n    }\n}","const validationConfig = { \n    formSelector: '.popup__form', \n    inputSelector: '.popup__input', \n    submitButtonSelector: '.popup__button', \n    inactiveButtonClass: 'popup__save-button_disabled', \n    inputErrorClass: 'popup__input_type_error', \n    errorClass: 'popup__error_visible' \n  }\n\n  export default validationConfig","export default class Api {\n    constructor(options) {\n      this._address = options.baseUrl;\n      this._token = options.headers.authorization;\n    }\n\n    _handleResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    _createRequest(endpoint, method, body) {\n        const fetchInit = {\n            method: method,\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        }\n\n        return fetch(\n            `${this._address}/${endpoint}`,\n            body ? { ...fetchInit, body: JSON.stringify(body) } : fetchInit\n            )\n        .then(this._handleResponse)\n    }\n\n    getUserInfo() {\n        return this._createRequest('users/me', 'GET')\n    }\n\n    getInitialCards() {\n        return this._createRequest('cards', 'GET')\n    }\n    \n    updateUserInfo(userInfo) {\n        return this._createRequest('users/me', 'PATCH', userInfo)\n    }\n    \n    postCard(data) {\n        return this._createRequest('cards', 'POST', data)\n    }\n\n\n    deleteCard(id) {\n        return this._createRequest(`cards/${id}`, 'DELETE')\n    }\n\n    like(id) {\n        return this._createRequest(`cards/likes/${id}`, 'PUT')\n    }\n\n    deleteLike(id) {\n        return this._createRequest(`cards/likes/${id}`, 'DELETE')\n    }\n\n    editAvatar(avatar) {\n        return this._createRequest('users/me/avatar', 'PATCH', avatar)\n    }\n}","import Popup from './popup.js';\n\nexport default class PopupWithConfirmation extends Popup {\n    constructor(popupSelector, confirmSubmitHandler) {\n      super(popupSelector);\n      this._confirmSubmitHandler = confirmSubmitHandler.bind(this);\n    }\n\n    setEventListeners(evt, data) {\n      super.setEventListeners();\n      this._form = this._popup.querySelector('.popup__form');\n       \n        this._data = data;\n        this._evt = evt;\n    \n       this._form.addEventListener('submit', (e) => { \n        e.preventDefault()  \n        \n        this._confirmSubmitHandler(this._evt, this._data);\n        this.close();\n      })\n    }\n  }","function renderLoading(isLoading, popupSelector, value, newValue) {\n  \n    if(isLoading) {\n      popupSelector.querySelector('.popup__save-button').value = newValue\n    } else {\n      popupSelector.querySelector('.popup__save-button').value = value\n    }\n  }\n  export {renderLoading}\n\n","import './index.css'\nimport { Card } from '../scripts/components/card.js'; \nimport { Section } from '../scripts/components/section.js';\nimport { photoGrid, \n  profileEditButton, \n  newCardAddButton,\n  popupEditNameInput, \n  popupEditJobInput, \n  avatarElement,\n  avatarEditElement,\n  popupEdit,\n  popupAvatarElement,\n  profileName, \n  profileAbout,\n  popupConfirm,\n  popupNewPlace,\n  popupImageSelector,\n  popupProfileEditForm,\n  avatarEditForm,\n  popupNewPlaceForm,\n  profileBtnValue,\n  profileBtnNewValue,\n  newPlaceBtnValue,\n  newPlaceBtnNewValue,\n  itemTemplate } from '../scripts/utils/constants.js';\nimport PopupWithForm from '../scripts/components/popup-with-form.js';\nimport PopupWithImage from '../scripts/components/popup-with-image.js';\nimport { FormValidator } from '../scripts/components/form-validator.js';\nimport UserInfo from '../scripts/components/user-info.js';\nimport validationConfig from '../scripts/utils/validation-config.js';\nimport Api from '../scripts/components/api.js';\nimport PopupWithConfirmation from '../scripts/components/popup-with-confirmation.js';\nimport { renderLoading } from '../scripts/utils/utils.js';\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-24',\n  headers: {\n    authorization: '197e4656-d963-4ef2-94ca-2fcf60ccdd88',\n    'Content-Type': 'application/json'\n  }\n});\n\nconst userInfo = new UserInfo(profileName, profileAbout, avatarElement)\nconst newCard = new Section (renderer, photoGrid);\nconst confirmPopup = new PopupWithConfirmation (popupConfirm, handleConfirmDeleting)\nconst profileEditForm = new PopupWithForm(popupEdit, handleProfileEditFormSubmit)\nconst newPlaceForm = new PopupWithForm(popupNewPlace, submitCardsForm)\nconst editAvatarForm = new PopupWithForm(popupAvatarElement, handleEditAvatarFormSubmit)\nconst popupImage = new PopupWithImage(popupImageSelector)\n\nconst popupPlaceFormValidation = new FormValidator(validationConfig, popupNewPlaceForm)\npopupPlaceFormValidation.enableValidation()\n\nconst popupEditFormValidation = new FormValidator(validationConfig, popupProfileEditForm) \npopupEditFormValidation.enableValidation()\n\nconst popupAvatarFormValidation = new FormValidator(validationConfig, avatarEditForm,)\npopupAvatarFormValidation.enableValidation()\n\nlet user = null;\nlet owner;\nlet _id\n\nPromise.all([\n  api.getUserInfo(),\n  api.getInitialCards()\n])\n.then(([userInfo, cards]) => {\n  recordUserInfo(userInfo);\n  renderInitialCards(cards)\n})\n.catch((err) => {\n  console.log(err); // выведем ошибку в консоль\n});\n\nfunction recordUserInfo(result) {\n  userInfo.setUserInfo(result);\n  avatarElement.src = result.avatar;\n  user= result;\n  owner = result;\n}\n\nfunction renderInitialCards(result) {\n  newCard.renderItems(result);\n}\n\nfunction renderer(cardData) {\n  const cardElement = new Card(\n    itemTemplate,\n    cardData, \n    user,\n    cardImageClickHandler, \n    handleDeleteClick,\n    handleLikeAdd,\n    handleLikeDelete)\n\n  return cardElement.render()\n}\n\nfunction handleLikeAdd(evt, cardData) {\n  api.like(cardData._id)\n  .then((res) => {\n    evt.target.nextElementSibling.textContent = res.likes.length\n    evt.target.classList.add('photo-grid__like-active')\n  })\n  .catch((err) => {console.log(err)})\n}\n\nfunction handleLikeDelete(evt, cardData) {\n  api.deleteLike(cardData._id)\n  .then((res) => {\n    evt.target.nextElementSibling.textContent = res.likes.length\n    evt.target.classList.remove('photo-grid__like-active')\n  })\n  .catch((err) => {console.log(err)})\n}\n\nfunction cardImageClickHandler(link, name) {\n  popupImage.open(link, name)\n};\n\nfunction handleDeleteClick(evt, cardData) {\n  confirmPopup.open()\n  confirmPopup.setEventListeners(evt, cardData)\n}\n\nfunction handleConfirmDeleting(evt, cardData) {\n  evt.target.parentNode.remove();\n  api.deleteCard(cardData)\n  .catch((err) => {console.log(err)})\n}\n\n//функция добавления карточки через форму\nfunction submitCardsForm (data) {\n  renderLoading(true, popupNewPlace, newPlaceBtnValue, newPlaceBtnNewValue)\n  api.postCard(data).then((data) => {\n    \n    _id = data._id\n    data.owner = owner\n    data.likes = []\n    newCard.addItem(renderer(data))\n    newPlaceForm.close()\n  })\n  .catch((err) => {console.log(err)})\n  .finally(() => {\n    renderLoading(false, popupNewPlace, newPlaceBtnValue, newPlaceBtnNewValue)\n    \n  })\n}\n\n//функция редактирования информации в профиле\nfunction handleProfileEditFormSubmit (data) {\n  renderLoading(true, popupEdit, profileBtnValue, profileBtnNewValue)\n  api.updateUserInfo(data)\n  .then((dataUpdated => {\n    recordUserInfo(dataUpdated)\n    profileEditForm.close()\n  }))\n  .catch((err) => {console.log(err)})\n  .finally(() => {\n    renderLoading(false, popupEdit, profileBtnValue, profileBtnNewValue)\n    \n  })\n}\n\nfunction pasteUserData(data) {\n  popupEditNameInput.value = data.name \n  popupEditJobInput.value = data.job\n}\n\nprofileEditButton.addEventListener('click', () => {\n  popupEditFormValidation.resetForm()\n  pasteUserData(userInfo.getUserInfo())\n  profileEditForm.open()\n});\n\nnewCardAddButton.addEventListener('click', () => {\n  newPlaceForm.open()\n  popupPlaceFormValidation.resetForm()\n});\n\navatarEditElement.addEventListener('click', () => {\n  editAvatarForm.open()\n  popupAvatarFormValidation.resetForm()\n})\n\n//функция обновления аватара через форму\nfunction handleEditAvatarFormSubmit(data) {\n  renderLoading(true, popupAvatarElement, profileBtnValue, profileBtnNewValue)\n  api.editAvatar(data)\n  .then(res => {\n    avatarElement.src = res.avatar;\n    editAvatarForm.close()})\n  .catch((err) => {console.log(err)})\n  .finally(() => {\n    renderLoading(false, popupAvatarElement, profileBtnValue, profileBtnNewValue)\n    \n  })\n}"],"sourceRoot":""}